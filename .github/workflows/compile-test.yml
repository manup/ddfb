name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux-amd64:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: deps
      run: bash ${GITHUB_WORKSPACE}/setup_deps.sh
    - name: Compile
      run: make
    - name: Strip binary
      run: strip -s ddfb
    - name: Print help
      run: ./ddfb
    - name: Upload linux amd64 binary
      uses: actions/upload-artifact@v3
      with:
        name: ddfb-linux-amd64
        path: ddfb
  build-win64:
    name: Build with MSVC
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Compile dependencies
      run: bash ${GITHUB_WORKSPACE}/setup_deps.sh
      shell: bash
    - name: Compile ddfb
      run: |
        cmake .
        cmake --build . --config MinSizeRel
    - name: Print help
      run: .\MinSizeRel\ddfb.exe
      shell: cmd
    - name: Upload win64 binary
      uses: actions/upload-artifact@v3
      with:
        name: ddfb-windows-x64
        path: .\MinSizeRel\ddfb.exe
  release:
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-win64]
    name: Release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download

      - name: Create archives
        run: |
          chmod +x ddfb-linux-amd64/ddfb
          tar -czf ddfb-linux-amd64.tar.gz -C ddfb-linux-amd64 .
          zip ddfb-windows-x64.zip ddfb-windows-x64/ddfb.exe

      - name: List downloaded artifacts
        run: ls -R

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: ${{ github.sha1 }}
          generate_release_notes: true
          files: |
            ddfb-linux-amd64.tar.gz
            ddfb-windows-x64.zip
